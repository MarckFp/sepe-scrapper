service: public-appointments-app

provider:
  name: aws
  runtime: python3.11
  architecture: arm64
  stage: production
  region: eu-south-2
  deploymentBucket:
    serverSideEncryption: AES256
    blockPublicAccess: true

package:
  individually: true
  patterns:
    - "!./**"

functions:
  appointment-publisher:
    handler: appointment_publisher.handler
    description: "Lambda function in charge of checking which appointment checks has to be done and queue it"
    memorySize: 128
    timeout: 60
    environment:
      SEPE_QUEUE: ${construct:sepe-queue.queueUrl}
      DYNAMODB_TABLE: ${env:DYNAMODB_TABLE}
    layers:
      - Ref: PythonRequirementsLambdaLayer
    package:
      patterns:
        - "appointment_publisher.py"
    events:
      - schedule:
          enabled: true
          rate: cron(0/5 * * * ? *)

constructs:
  sepe-queue:
    type: queue
    worker:
      handler: workers.sepe_worker.handler
      description: "Lambda function in charge of checking SEPE appointments"
      memorySize: 128
      timeout: 30
      environment:
        ID_CLIENTE: ${env:ID_CLIENTE}
        LAT_ORIGEN: ${env:LAT_ORIGEN}
        LNG_ORIGEN: ${env:LNG_ORIGEN}
        IDS_JERARQUIA_TRAMITES: ${env:IDS_JERARQUIA_TRAMITES}
        TELEGRAM_TOKEN: ${env:TELEGRAM_TOKEN}
      layers:
        - Ref: PythonRequirementsLambdaLayer
      package:
        patterns:
          - "workers/sepe_worker.py"

plugins:
  - serverless-python-requirements
  - serverless-lift

custom:
  pythonRequirements:
    slim: true
    layer: true
